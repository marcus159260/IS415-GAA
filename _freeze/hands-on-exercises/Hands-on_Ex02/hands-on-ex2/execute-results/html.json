{
  "hash": "912608d9953721afc81e6c51cfa1964e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on-Exercise 2: Thematic Mapping and GeoVisualisation with R\"\nauthor: \"Marcus Jaeson Yeo\"\ndate: \"August 24, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## Topics:\n\n-   **Thematic Mapping**\n\n    -   Creating maps to: visualise properties of geographic features that are unable to be naturally seen\n\n    -   Types of thematic maps:\n\n        -   **Choropleth maps** (shading areas based on data values)\n\n        <!-- -->\n\n        -   **Dot distribution maps** (using dots to represent occurrences)\n\n        -   **Isarithmic maps** (using contour lines to represent continuous data)\n\n        -   **Proportional symbol maps** (using symbols of different sizes to represent data values)\n\n    -   Focus is on Choropleth maps\n\n        -   advantages\n\n        -   disadvantages\n\n        -   used for?\n\n-   **GeoVisualisation**\n\n    -   Interacting and Interpreting geospatial data through visual representations\n\n    -   Using dynamic and interactive visual tools to explore spatial data and patterns\n\n    -   e.g:\n\n        -   3D models\n\n        -   Interactive maps\n\n        -   Time-based animations\n\n        -   VR environments (Virtual Reality)\n\n## Packages used\n\n-   **\\*tmap**: thematic maps\n\n-   tidyverse:\n\n    -   readr: for importing delimited text files\n\n    -   tidyr: tidying up data\n\n    -   dplyr: for data wrangling\n\n-   sf: rendering simple features, handling geospatial data\n\n## Install packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tmap, tidyverse)\n\n# use this got timeout issue\n# options(timeout = 300)\n# install.packages(\"tmap\")\n```\n:::\n\n\n## Importing data\n\n-   Geospatial Data\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    mpsz = st_read(dsn = \"data/geospatial/MasterPlan2014SubzoneBoundaryWebSHP\", \n                      layer = \"MP14_SUBZONE_WEB_PL\")\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    Reading layer `MP14_SUBZONE_WEB_PL' from data source \n      `C:\\marcus159260\\IS415-GAA\\hands-on-exercises\\Hands-on_Ex02\\data\\geospatial\\MasterPlan2014SubzoneBoundaryWebSHP' \n      using driver `ESRI Shapefile'\n    Simple feature collection with 323 features and 15 fields\n    Geometry type: MULTIPOLYGON\n    Dimension:     XY\n    Bounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\n    Projected CRS: SVY21\n    ```\n    \n    \n    :::\n    :::\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    mpsz\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    Simple feature collection with 323 features and 15 fields\n    Geometry type: MULTIPOLYGON\n    Dimension:     XY\n    Bounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\n    Projected CRS: SVY21\n    First 10 features:\n       OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n    1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n    2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n    3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n    4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n    5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n    6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n    7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n    8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n    9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n    10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n       PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n    1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n    2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n    3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n    4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n    5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n    8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n    9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n    10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n         Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n    1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n    2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n    3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n    4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n    5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n    6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n    7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n    8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n    9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n    10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n    ```\n    \n    \n    :::\n    :::\n\n\n-   Aspatial Data\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    popdata <- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    \n    ```\n    Rows: 984656 Columns: 7\n    ── Column specification ────────────────────────────────────────────────────────\n    Delimiter: \",\"\n    chr (5): PA, SZ, AG, Sex, TOD\n    dbl (2): Pop, Time\n    \n    ℹ Use `spec()` to retrieve the full column specification for this data.\n    ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n    ```\n    \n    \n    :::\n    :::\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    popdata\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    # A tibble: 984,656 × 7\n       PA         SZ                     AG     Sex     TOD                Pop  Time\n       <chr>      <chr>                  <chr>  <chr>   <chr>            <dbl> <dbl>\n     1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 1- and 2-Ro…     0  2011\n     2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 3-Room Flats    10  2011\n     3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 4-Room Flats    30  2011\n     4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HDB 5-Room and …    50  2011\n     5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   HUDC Flats (exc…     0  2011\n     6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Landed Properti…     0  2011\n     7 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Condominiums an…    40  2011\n     8 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males   Others               0  2011\n     9 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 1- and 2-Ro…     0  2011\n    10 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Females HDB 3-Room Flats    10  2011\n    # ℹ 984,646 more rows\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    #see all columns\n    spec(popdata)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    cols(\n      PA = col_character(),\n      SZ = col_character(),\n      AG = col_character(),\n      Sex = col_character(),\n      TOD = col_character(),\n      Pop = col_double(),\n      Time = col_double()\n    )\n    ```\n    \n    \n    :::\n    :::\n\n\n## Data Wrangling\n\n-   tidyr -\\> pivot_wider()\n\n-   dplyr -\\> mutate(), filter(), group_by(), select()\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    popdata2020 <- popdata %>%\n      filter(Time == 2020) %>%\n      group_by(PA, SZ, AG) %>%\n      summarise(`POP` = sum(`Pop`)) %>%\n      ungroup()%>%\n      pivot_wider(names_from=AG, \n                  values_from=POP) %>%\n      mutate(YOUNG = rowSums(.[3:6])\n             +rowSums(.[12])) %>%\n    mutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\n    rowSums(.[13:15]))%>%\n    mutate(`AGED`=rowSums(.[16:21])) %>%\n    mutate(`TOTAL`=rowSums(.[3:21])) %>%  \n    mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n    /`ECONOMY ACTIVE`) %>%\n      select(`PA`, `SZ`, `YOUNG`, \n           `ECONOMY ACTIVE`, `AGED`, \n           `TOTAL`, `DEPENDENCY`)\n    ```\n    \n    ::: {.cell-output .cell-output-stderr}\n    \n    ```\n    `summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n    `.groups` argument.\n    ```\n    \n    \n    :::\n    \n    ```{.r .cell-code}\n    popdata2020\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    # A tibble: 332 × 7\n       PA         SZ                   YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n       <chr>      <chr>                <dbl>            <dbl> <dbl> <dbl>      <dbl>\n     1 Ang Mo Kio Ang Mo Kio Town Cen…  1440             2610   760  4810      0.843\n     2 Ang Mo Kio Cheng San             6640            15460  6050 28150      0.821\n     3 Ang Mo Kio Chong Boon            6150            13950  6470 26570      0.905\n     4 Ang Mo Kio Kebun Bahru           5540            12090  5120 22750      0.882\n     5 Ang Mo Kio Sembawang Hills       2100             3410  1310  6820      1    \n     6 Ang Mo Kio Shangri-La            3960             8420  3610 15990      0.899\n     7 Ang Mo Kio Tagore                2220             4200  1530  7950      0.893\n     8 Ang Mo Kio Townsville            4690            11450  5100 21240      0.855\n     9 Ang Mo Kio Yio Chu Kang             0                0     0     0    NaN    \n    10 Ang Mo Kio Yio Chu Kang East     1220             2300   750  4270      0.857\n    # ℹ 322 more rows\n    ```\n    \n    \n    :::\n    :::\n\n\n## Joining data\n\n-   convert PA and SZ to uppercase (toupper)\n\n    -   because data in PA and SZ are in uppercase and lowercase, while data in mpsz (e.g SUBZONE_N and PLN_AREA_N) are in uppercase.\n\n\n        ::: {.cell}\n        \n        ```{.r .cell-code}\n        popdata2020 <- popdata2020 %>%\n          mutate_at(.vars = vars(PA, SZ), \n                  .funs = list(toupper)) %>%\n          filter(`ECONOMY ACTIVE` > 0)\n        ```\n        :::\n\n\n-   join attribute data (popdata2020) and geospatial data (mpsz) using left_join()\n\n    -   using common identifier: SUBZONE_N = SZ\n\n\n        ::: {.cell}\n        \n        ```{.r .cell-code}\n        mpsz_pop2020 <- left_join(mpsz, popdata2020,\n                                  by = c(\"SUBZONE_N\" = \"SZ\"))\n        ```\n        :::\n\n\n-   save mpsz_pop2020 data as an r object (write_rds)\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    write_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n    ```\n    :::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}