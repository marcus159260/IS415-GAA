---
title: "In-class-Exercise 10: Calibrating Hedonic Pricing Model for Private Highrise Property with MLR methods"
author: "Marcus Jaeson Yeo"
date: "October 27, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true
---

### Load packages

```{r}
pacman::p_load(olsrr, ggstatsplot, sf, 
               tmap, tidyverse, gtsummary,
               performance, see, sfdep)
```

### Importing data

```{r}

condo_resale <- read_csv("data/aspatial/Condo_resale_2015.csv")

mpsz <- read_rds("data/rds/mpsz.rds")

condo_resale_sf <- read_rds(
  "data/rds/condo_resale_sf.rds")
```

```{r}
#|fig-width: 12
#|fig-height: 10
ggcorrmat(condo_resale[, 5:23])
```

### Hedonistic Pricing Model

```{r}
condo_mlr <- lm(formula = SELLING_PRICE ~ AREA_SQM + 
                  AGE   + PROX_CBD + PROX_CHILDCARE + 
                  PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + 
                  PROX_HAWKER_MARKET    + PROX_KINDERGARTEN + 
                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + 
                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + 
                  PROX_SUPERMARKET + PROX_BUS_STOP + 
                  NO_Of_UNITS + FAMILY_FRIENDLY + 
                  FREEHOLD + LEASEHOLD_99YR, 
                data=condo_resale_sf)
summary(condo_mlr)

```

### Generating tidy linear regression report

```{r}
ols_regress(condo_mlr)
```

Stepwise regression is the step-by-step iterative construction of a regression model that involves the selection of independent variables to be used in a final model. It involves adding or removing potential explanatory variables in succession and testing for statistical significance after each iteration.

-   [`ols_step_forward_p`](https://olsrr.rsquaredacademy.com/reference/ols_step_forward_p)

-   [`ols_step_backward_p`](https://olsrr.rsquaredacademy.com/reference/ols_step_backward_p)

-   [`ols_step_both_p`](https://olsrr.rsquaredacademy.com/reference/ols_step_both_p)

### Forwawrd Stepwise Multiple Linear Regression

```{r}
condo_fw_mlr <- ols_step_forward_p(
  condo_mlr,
  p_val = 0.05,
  details = FALSE)
condo_fw_mlr
```

```{r}
plot(condo_fw_mlr)
```

### Backward Stepwise Multiple Linear Regression

```{r}
condo_bw_mlr <- ols_step_backward_p(
  condo_mlr,
  p_val = 0.05,
  details = FALSE)
condo_bw_mlr
```

### Stepwise Multiple Linear Regression

```{r}
condo_sb_mlr <- ols_step_both_p(
  condo_mlr,
  p_val = 0.05,
  details = FALSE)
condo_sb_mlr
```

### Compare Performance

```{r}
metric <- compare_performance(condo_mlr, 
                    condo_fw_mlr$model,
                    condo_bw_mlr$model,
                    condo_sb_mlr$model)
```

```{r}
metric$Name <- gsub(".*\\\\([a-zA-Z0-9_]+)\\\\, \\\\model\\\\.*", "\\1", metric$Name)

```

```{r}
plot(metric)
```

selected model (red one): [*condo_sb_mlr(lm) (stepboth / stepwise)*]{.underline}

### Visualising Model Parameters

```{r}

ggcoefstats(condo_sb_mlr$model,
            sort = "ascending")
```

### Check for Multi-collinearity

-   VIF method

    -   Interpretation of VIF

        -   \< 5: low multicollinearity

        -   5-10: moderate multicollinearity

        -   \> 10: strong multicollineariy

```{r}
check_collinearity(condo_sb_mlr$model)

```

```{r}
plot(check_collinearity(condo_sb_mlr$model)) +
  theme(axis.text.x = element_text(
    angle = 45, hjust = 1))
```

### Linearity Assumption Test

```{r}
out <- plot(check_model(condo_sb_mlr$model, 
                        panel = FALSE))
out[[2]]
```

-   Figure above reveals that most of the data points are scattered around the 0 line, hence we can safely conclude that the relationships between the dependent variable and independent variables are linear.

### Normality Assumption Test

```{r}
plot(check_normality(condo_sb_mlr$model))
```

-   follows normal distribution (because dots fall along the green line)

### Checking of Outliers

```{r}
outliers <- check_outliers(condo_sb_mlr$model,
                           method = "cook")
outliers
```

```{r}
plot(check_outliers(condo_sb_mlr$model,
                           method = "cook"))
```

## Spatial Non-stationary Assumption

The hedonic model we try to build are using geographically referenced attributes, hence it is also important for us to visual the residual of the hedonic pricing model.

-   Ho: The residuals are randomly distributed (also known as spatial stationary)

-   H1: The residuals are spatially non-stationary

```{r}
mlr_output <- as.data.frame(condo_fw_mlr$model$residuals) %>%
  rename(`FW_MLR_RES` = `condo_fw_mlr$model$residuals`)
```

```{r}
condo_resale_sf <- cbind(condo_resale_sf, 
                        mlr_output$FW_MLR_RES) %>%
  rename(`MLR_RES` = `mlr_output.FW_MLR_RES`)
```

```{r}
tmap_mode("view")
tm_shape(mpsz)+
  tmap_options(check.and.fix = TRUE) +
  tm_polygons(alpha = 0.4) +
tm_shape(condo_resale_sf) +  
  tm_dots(col = "MLR_RES",
          alpha = 0.6,
          style="quantile") 
tmap_mode("plot")
```

### Spatial Stationary Test

-   k nearest neighbour

```{r}
condo_resale_sf <- condo_resale_sf %>%
  mutate(nb = st_knn(geometry, k=6,
                     longlat = FALSE),
         wt = st_weights(nb,
                         style = "W"),
         .before = 1)
```

-   global moran perm

```{r}
global_moran_perm(condo_resale_sf$MLR_RES, 
                  condo_resale_sf$nb, 
                  condo_resale_sf$wt, 
                  alternative = "two.sided", 
                  nsim = 99)
```

-   interpretation

    -   The Global Moran’s I test for residual spatial autocorrelation shows that **it’s p-value is less than the alpha value of 0.05**. Hence, we **reject the null hypothesis** that the residuals are randomly distributed. (h0 -\> randomly distributed)

        Since the Observed Global Moran I = 0.25586 which is greater than 0, we can **infer** that the residuals resemble **cluster distribution**., accept null hypothesis

![![](images/clipboard-3122884814.png)](images/clipboard-2889434103.png)
