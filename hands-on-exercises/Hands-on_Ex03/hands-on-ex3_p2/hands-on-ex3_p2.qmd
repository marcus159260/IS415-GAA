---
title: "Hands-on-Exercise 3: 2nd Order Spatial Point Patterns Analysis"
author: "Marcus Jaeson Yeo"
date: "August 31, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
---

### Install and Load Data

```{r}
pacman::p_load(sf, raster, spatstat, tmap, tidyverse)
```

------------------------------------------------------------------------

### Import Data and transform to correct CRS

```{r}
childcare_sf <- st_read("data/child-care-services-geojson.geojson") %>%
  st_transform(crs = 3414) 
cat("\n")

sg_sf <- st_read(dsn = "data", layer="CostalOutline") %>%
  st_transform(crs = 3414)
cat("\n")

mpsz_sf <- st_read(dsn = "data", layer = "MP14_SUBZONE_WEB_PL") %>%
  st_transform(crs = 3414)
cat("\n")

```

```{r}
st_crs(childcare_sf)
cat("\n")

st_crs(sg_sf)
cat("\n")

st_crs(mpsz_sf)
cat("\n")
```

------------------------------------------------------------------------

### Data Wrangling (Convert to ppp format, Handle Duplication) (childcare ppp)

-   Convert sf format to ppp format

    ```{r}
    childcare_ppp <- as.ppp(childcare_sf) 
    childcare_ppp

    ```

```{r}
    plot(childcare_ppp)
```

-   Handle duplication

    ```{r}
    any(duplicated(childcare_ppp))
    ```

    -   Since no duplicates, no need to remove (jitter, etc..)

------------------------------------------------------------------------

### Extract Study Area, plot, Convert to Owin Object, combine

-   extract study areas

    ```{r}
    pg <- mpsz_sf %>%
      filter(PLN_AREA_N == "PUNGGOL")
    tm <- mpsz_sf %>%
      filter(PLN_AREA_N == "TAMPINES")
    ck <- mpsz_sf %>%
      filter(PLN_AREA_N == "CHOA CHU KANG")
    jw <- mpsz_sf %>%
      filter(PLN_AREA_N == "JURONG WEST")
    ```

-   plot

    ```{r}
    par(mfrow=c(2,2))
    plot(pg, main = "Punggol")
    plot(tm, main = "Tampines")
    plot(ck, main = "Choa Chu Kang")
    plot(jw, main = "Jurong West")
    ```

-   convert to owin object

    ```{r}
    pg_owin = as.owin(pg)
    tm_owin = as.owin(tm)
    ck_owin = as.owin(ck)
    jw_owin = as.owin(jw)
    ```

-   combine childcare points and study areas

    ```{r}
    childcare_pg_ppp = childcare_ppp[pg_owin]
    childcare_tm_ppp = childcare_ppp[tm_owin]
    childcare_ck_ppp = childcare_ppp[ck_owin]
    childcare_jw_ppp = childcare_ppp[jw_owin]
    ```

-   rescale from meters to kilometers

    ```{r}
    childcare_pg_ppp.km = rescale.ppp(childcare_pg_ppp, 1000, "km")
    childcare_tm_ppp.km = rescale.ppp(childcare_tm_ppp, 1000, "km")
    childcare_ck_ppp.km = rescale.ppp(childcare_ck_ppp, 1000, "km")
    childcare_jw_ppp.km = rescale.ppp(childcare_jw_ppp, 1000, "km")
    ```

-   plot

    ```{r}
    par(mfrow=c(2,2))
    plot(childcare_pg_ppp.km, main="Punggol")
    plot(childcare_tm_ppp.km, main="Tampines")
    plot(childcare_ck_ppp.km, main="Choa Chu Kang")
    plot(childcare_jw_ppp.km, main="Jurong West")
    ```

------------------------------------------------------------------------

## 

## [**2nd Order SPPA**]{.underline}

------------------------------------------------------------------------

-   [**Using G function to analyse Spatial Point Process**]{.underline}

    -   The G function measures the distribution of the distances from an arbitrary event to its nearest event. In this section, you will learn how to compute G-function estimation by using [*Gest()*](https://rdrr.io/cran/spatstat/man/Gest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using [*envelope()*](https://rdrr.io/cran/spatstat/man/envelope.html) of **spatstat** package.

### [**CCK Planning Area Complete Spatial Randomness (CSR) Test**]{.underline}

#### Computing G-function estimate

-   using non-rescaled choa chu kang ppp (in meters)

```{r}
G_ck = Gest(childcare_ck_ppp, correction = "border")
plot(G_ck, xlim=c(0,500))
```

------------------------------------------------------------------------

#### Perform Complete Spatial Randomness Test

-   Confirm observation through Hypothesis Test

    -   h0 (null hypothesis): The distribution of childcare services in Choa Chu Kang are randomly distributed.

    -   h1: The distribution of childcare services in Choa Chu Kang are not randomly distributed.

-   The null hypothesis (h0: random distribution) will be rejected if p-value is smaller than alpha value of 0.001.

-   Monte Carlo simulation with G-function

```{r}
G_ck.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)
```

-   plot

    ```{r}
    plot(G_ck.csr)
    ```

------------------------------------------------------------------------

### [**Tampines Planning Area Complete Spatial Randomness (CSR) Test**]{.underline}

#### Computing G-function estimate

-   using non-rescaled tampines ppp (in meters)

```{r}
G_tm = Gest(childcare_tm_ppp, correction = "best")
plot(G_tm)
```

------------------------------------------------------------------------

#### Perform Complete Spatial Randomness Test

-   Confirm observation through Hypothesis Test

    -   h0 (null hypothesis): The distribution of childcare services in Tampines are randomly distributed.

    -   h1: The distribution of childcare services in Tampines are not randomly distributed.

-   The null hypothesis (h0: random distribution) will be rejected if p-value is smaller than alpha value of 0.001.

-   Monte Carlo simulation with G-function

```{r}
G_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = "all", nsim = 999)
```

-   plot

    ```{r}
    plot(G_tm.csr)
    ```

------------------------------------------------------------------------

-   [**Using F function to analyse Spatial Point Process**]{.underline}

    -   The F function estimates the empty space function F(r) or its hazard rate h(r) from a point pattern in a window of arbitrary shape. In this section, you will learn how to compute F-function estimation by using [*Fest()*](https://rdrr.io/cran/spatstat/man/Fest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using [*envelope()*](https://rdrr.io/cran/spatstat/man/envelope.html) of **spatstat** package.

### [**CCK Planning Area Complete Spatial Randomness (CSR) Test**]{.underline}

#### Computing F-function estimate

-   using non-rescaled choa chu kang ppp (in meters)

    ```{r}
    F_ck = Fest(childcare_ck_ppp)
    plot(F_ck)
    ```

------------------------------------------------------------------------

#### Perform Complete Spatial Randomness Test

-   Confirm observation through Hypothesis Test

    -   h0 (null hypothesis): The distribution of childcare services in Choa Chu Kang are randomly distributed.

    -   h1: The distribution of childcare services in Choa Chu Kang are not randomly distributed.

-   The null hypothesis (h0: random distribution) will be rejected if p-value is smaller than alpha value of 0.001.

-   Monte Carlo simulation with F-function

    ```{r}
    F_ck.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)
    ```

<!-- -->

-   plot

    ```{r}
    plot(F_ck.csr)
    ```

------------------------------------------------------------------------

### [**Tampines Planning Area Complete Spatial Randomness (CSR) Test**]{.underline}

#### Computing F-function estimate

-   using non-rescaled tampines ppp (in meters)

    ```{r}
    F_tm = Fest(childcare_tm_ppp, correction = "best")
    plot(F_tm)
    ```

------------------------------------------------------------------------

#### Perform Complete Spatial Randomness Test

-   Confirm observation through Hypothesis Test

    -   h0 (null hypothesis): The distribution of childcare services in Tampines are randomly distributed.

    -   h1: The distribution of childcare services in Tampines are not randomly distributed.

-   The null hypothesis (h0: random distribution) will be rejected if p-value is smaller than alpha value of 0.001.

-   Monte Carlo simulation with G-function

    ```{r}
    F_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = "all", nsim = 999)
    ```

<!-- -->

-   plot

    ```{r}
    plot(F_tm.csr)
    ```

------------------------------------------------------------------------

-   [**Using K function to analyse Spatial Point Process**]{.underline}

    -   K-function measures the number of events found up to a given distance of any particular event. In this section, you will learn how to compute K-function estimates by using [*Kest()*](https://rdrr.io/cran/spatstat/man/Kest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using *envelope()* of spatstat package.

### [**CCK Planning Area Complete Spatial Randomness (CSR) Test**]{.underline}

#### Computing K-function estimate

-   using non-rescaled choa chu kang ppp (in meters)

    ```{r}
    K_ck = Kest(childcare_ck_ppp, correction = "Ripley")
    plot(K_ck, . -r ~ r, ylab= "K(d)-r", xlab = "d(m)")
    ```

------------------------------------------------------------------------

#### Perform Complete Spatial Randomness Test

-   Confirm observation through Hypothesis Test

    -   h0 (null hypothesis): The distribution of childcare services in Choa Chu Kang are randomly distributed.

    -   h1: The distribution of childcare services in Choa Chu Kang are not randomly distributed.

-   The null hypothesis (h0: random distribution) will be rejected if p-value is smaller than alpha value of 0.001.

-   Monte Carlo simulation with K-function

    ```{r}
    K_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
    ```

<!-- -->

-   plot

    ```{r}
    plot(K_ck.csr, . - r ~ r, xlab="d", ylab="K(d)-r")
    ```

------------------------------------------------------------------------

### [**Tampines Planning Area Complete Spatial Randomness (CSR) Test**]{.underline}

#### Computing K-function estimate

-   using non-rescaled tampines ppp (in meters)

    ```{r}
    K_tm = Kest(childcare_tm_ppp, correction = "Ripley")
    plot(K_tm, . -r ~ r, 
         ylab= "K(d)-r", xlab = "d(m)", 
         xlim=c(0,1000))
    ```

------------------------------------------------------------------------

#### Perform Complete Spatial Randomness Test

-   Confirm observation through Hypothesis Test

    -   h0 (null hypothesis): The distribution of childcare services in Tampines are randomly distributed.

    -   h1: The distribution of childcare services in Tampines are not randomly distributed.

-   The null hypothesis (h0: random distribution) will be rejected if p-value is smaller than alpha value of 0.001.

-   Monte Carlo simulation with G-function

    ```{r}
    K_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)
    ```

<!-- -->

-   plot

    ```{r}
    plot(K_tm.csr, . - r ~ r, 
         xlab="d", ylab="K(d)-r", xlim=c(0,500))
    ```

------------------------------------------------------------------------

-   [**Using L function to analyse Spatial Point Process**]{.underline}

    -   Cmpute L-function estimation by using [*Lest()*](https://rdrr.io/cran/spatstat/man/Lest.html) of **spatstat** package. You will also learn how to perform monta carlo simulation test using *envelope()* of spatstat package.

### [**CCK Planning Area Complete Spatial Randomness (CSR) Test**]{.underline}

#### Computing L-function estimate

-   using non-rescaled choa chu kang ppp (in meters)

    ```{r}
    L_ck = Lest(childcare_ck_ppp, correction = "Ripley")
    plot(L_ck, . -r ~ r, 
         ylab= "L(d)-r", xlab = "d(m)")
    ```

------------------------------------------------------------------------

#### Perform Complete Spatial Randomness Test

-   Confirm observation through Hypothesis Test

    -   h0 (null hypothesis): The distribution of childcare services in Choa Chu Kang are randomly distributed.

    -   h1: The distribution of childcare services in Choa Chu Kang are not randomly distributed.

-   The null hypothesis (h0: random distribution) will be rejected if p-value is smaller than alpha value of 0.001.

-   Monte Carlo simulation with L-function

    ```{r}
    L_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
    ```

<!-- -->

-   plot

    ```{r}
    plot(L_ck.csr, . - r ~ r, xlab="d", ylab="L(d)-r")
    ```

------------------------------------------------------------------------

### [**Tampines Planning Area Complete Spatial Randomness (CSR) Test**]{.underline}

#### Computing L-function estimate

-   using non-rescaled tampines ppp (in meters)

    ```{r}
    L_tm = Lest(childcare_tm_ppp, correction = "Ripley")
    plot(L_tm, . -r ~ r, 
         ylab= "L(d)-r", xlab = "d(m)", 
         xlim=c(0,1000))
    ```

------------------------------------------------------------------------

#### Perform Complete Spatial Randomness Test

-   Confirm observation through Hypothesis Test

    -   h0 (null hypothesis): The distribution of childcare services in Tampines are randomly distributed.

    -   h1: The distribution of childcare services in Tampines are not randomly distributed.

-   The null hypothesis (h0: random distribution) will be rejected if p-value is smaller than alpha value of 0.001.

-   Monte Carlo simulation with L-function

    ```{r}
    L_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)
    ```

<!-- -->

-   plot

    ```{r}
    plot(L_tm.csr, . - r ~ r, 
         xlab="d", ylab="L(d)-r", xlim=c(0,500))
    ```
